services:
  # Web API Service
  - type: web
    name: client-portal-api
    env: docker
    buildCommand: ""
    startCommand: ""
    dockerfilePath: ./Dockerfile
    disk:
      name: uploads-disk
      mountPath: /app/uploads
      sizeGB: 1
    envVars:
      - key: ASPNETCORE_ENVIRONMENT
        value: Production
      - key: DOTNET_RUNNING_IN_CONTAINER
        value: true
      # aqui puedes agregar m√°s variables de entorno si las necesitas
      - key: FRONTEND_URL
        value: https://client-portal-devs.vercel.app
      # Variables de entorno para PostgreSQL
      - key: DB_NAME
        value: clientportal_prod
      - key: DB_USER
        value: clientportal_user
      - key: DB_PASSWORD
        generateValue: true

  # =====================================================
  # SERVICIO DE BASE DE DATOS POSTGRESQL
  # =====================================================

  # Servicio de base de datos PostgreSQL
  - type: pserv
    name: client-portal-db
    env: postgresql
    databaseName: ${DB_NAME}
    user: ${DB_USER}
    password: ${DB_PASSWORD}
    ipAllowList: []  # Solo accesible por otros servicios del proyecto

  # =====================================================
  # SERVICIO DE REDIS (OPCIONAL - PARA CACHE)
  # =====================================================
  # Descomenta si necesitas Redis para guardar cosas en cache

  # - type: redis
  #   name: client-portal-redis
  #   ipAllowList: []  # Solo accesible por otros servicios del proyecto